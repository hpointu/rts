{"version":3,"sources":["hpointu/rts/core.cljs"],"mappings":"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","names":["hpointu.rts.core/world-width","world","cljs.core/count","cljs.core.get","hpointu.rts.core/world-height","hpointu.rts.core/->world","width","height","full","cljs.core/vec","iter__4529__auto__","s__35800","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","b__35802","cljs.core/chunk-buffer","i__35801","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__35799","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","_","cljs.core.range","line","cljs.core.into","s__35808","b__35810","i__35809","iter__35807","cljs.core.conj","s__35813","b__35815","i__35814","iter__35812","hpointu.rts.core/obstacle?","x","y","obstacles","G__35816","cljs.core.get_in","hpointu.rts.core/in-world?","cljs.core/chunk-first"],"sourcesContent":["(ns hpointu.rts.core)\n\n\n(defn world-width [world]\n  (count (get world 0)))\n\n(defn world-height [world]\n  (count world))\n\n(defn ->world [width height]\n  (let [full (vec (for [_ (range width)] :w))\n        line (-> [:w]\n                 (into (for [_ (range (- width 2))] :g))\n                 (conj :w))]\n    (-> [full]\n        (into (for [_ (range (- height 2))] line))\n        (conj full)))) \n\n(defn obstacle? [world x y]\n  (let [obstacles #{:w}]\n    (some? (obstacles (get-in world [y x])))))\n\n(defn in-world? [world x y]\n  (and (< -1 x (world-width world))\n       (< -1 y (world-height world))))\n"]}