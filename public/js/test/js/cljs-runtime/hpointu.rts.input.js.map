{"version":3,"sources":["hpointu/rts/input.cljs"],"mappings":";AAEA,AAAKA,AAAO,AAAA,AAACC;AACb,AAAKC,AAAM,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACD;AAEZ,AAAA,AAAME,AAAcC;AAApB,AACE,AAAA,AAAAC,AAACC,AAAWN,AAAOI;;AAErB,AAAA,AAAMG,AAAWC;AAAjB,AACE,AAAMM,AAAK,AAAwBN;AAAnCC,AAAA,AAAAJ,AACqBH;AADrBO,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AACcM;AADd,AAAAF,AAAAJ,AAAA,AACgBO;AADhB,AAAA,AAEG,AAAGD,AAAE,AAAQD,AACb,AAAGE,AAAE,AAAOF;;AAEjB,AAAA,AAAMG;AAAN,AACE,AAAA,AAAA,AAAAC,AAACC;AAAD,AAAyC,AAACC,AAAMpB,AAAOqB,AAAK,AAAAH;;;AAC5D,AAAA,AAAA,AAAAI,AAACH;AAAD,AAAuC,AAACC,AAAMpB,AAAOuB,AAAK,AAAAD;;;AAC1D,AAAA,AAAA,AAAAE,AAACL;AAAD,AAA2C,AAAA,AAAA,AAACC,AAAMlB,AAAMuB,AACH,AAAAD,AACA,AAAAA","names":["hpointu.rts.input/keymap","cljs.core.atom","hpointu.rts.input/mouse","hpointu.rts.input/key-pressed?","code","cljs.core/deref","cljs.core/contains?","hpointu.rts.input/mouse-pos","elem","map__45821","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","rect","x","y","hpointu.rts.input/init!","p1__45823#","js/document.addEventListener","cljs.core.swap_BANG_","cljs.core/conj","p1__45824#","cljs.core/disj","p1__45825#","cljs.core/assoc"],"sourcesContent":["(ns hpointu.rts.input)\n\n(def keymap (atom #{}))\n(def mouse (atom {:x 0 :y 0 :clicked? false}))\n\n(defn key-pressed? [code]\n  (contains? @keymap code))\n\n(defn mouse-pos [elem]\n  (let [rect (.getBoundingClientRect elem)\n        {:keys [x y]} @mouse]\n    [(- x (.-left rect))\n     (- y (.-top rect))]))\n\n(defn init! []\n  (js/document.addEventListener \"keydown\" #(swap! keymap conj (.-code %)))\n  (js/document.addEventListener \"keyup\" #(swap! keymap disj (.-code %)))\n  (js/document.addEventListener \"mousemove\" #(swap! mouse assoc\n                                                    :x (.-clientX %)\n                                                    :y (.-clientY %))))\n"]}